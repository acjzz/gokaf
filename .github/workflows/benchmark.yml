name: benchmark
on:
  push:
    branches: [main]
    paths-ignore:
        - README.md
        - LICENSE
        - '.github/**'

permissions:
    # deployments permission to deploy GitHub pages website
    deployments: write
    # contents permission to update benchmark contents in gh-pages branch
    contents: write

jobs:
  benchmark:
    name: Performance Regression Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
            go-version-file: go.mod
      # Run benchmark with `go test -bench` and stores the output to a file
      - name: Run benchmark
        run: |
            make bench
      # Download previous benchmark result from cache (if exists)
      - name: Download previous benchmark data
        uses: actions/cache@v3
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark
      # Run `github-action-benchmark` action
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Gokaf Benchmark
          # What benchmark tool the output.txt came from
          tool: 'go'
          # Where the output from the benchmark tool is stored
          output-file-path: benchmark_output.txt
          # Access token to deploy GitHub Pages branch
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Push and deploy GitHub pages branch automatically
          auto-push: true
          # Where the previous data file is stored
          external-data-json-path: ./cache/benchmark-data.json
          # Workflow will fail when an alert happens
          fail-on-alert: true
          # Enable alert commit comment
          comment-on-alert: true
          # Mention @rhysd in the commit comment
          alert-comment-cc-users: '@acjzz'
      # Upload the updated cache file for the next job by actions/cache
